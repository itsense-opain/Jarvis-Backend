// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Opain.Jarvis.Infraestructura.Datos;

namespace Opain.Jarvis.Infraestructura.Datos.Migrations
{
    [DbContext(typeof(ContextoOpain))]
    [Migration("20240408222040_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Acceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("IdAeroLineas")
                        .HasMaxLength(11);

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.HasKey("Id");

                    b.ToTable("Accesos");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Aerolinea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadUsuarios");

                    b.Property<string>("Codigo");

                    b.Property<int>("IdEstado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("PDFPasajeros");

                    b.Property<string>("Sigla");

                    b.HasKey("Id");

                    b.ToTable("Aerolineas");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Aeropuertos", b =>
                {
                    b.Property<string>("CodigoIATA")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3);

                    b.Property<string>("Ciudad")
                        .HasMaxLength(45);

                    b.Property<bool>("CobroCausal64VuelosDom");

                    b.Property<string>("Pais")
                        .HasMaxLength(45);

                    b.HasKey("CodigoIATA");

                    b.ToTable("Aeropuertos");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Cargue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Archivo");

                    b.Property<DateTime>("FechaHora");

                    b.Property<int>("Tipo");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Cargues");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Causal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("Estado");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("Estado");

                    b.HasIndex("Tipo");

                    b.ToTable("Causales");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Ciudad", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3);

                    b.Property<string>("Codigo");

                    b.Property<int>("IdEstado");

                    b.Property<string>("IdPais")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("IdPais");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.ClaimRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("ClaimsRoles");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.ClaimUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ClaimsUsuario");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.HorarioAerolinea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("HoraFin")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("HoraInicio")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("IdAerolinea");

                    b.HasKey("Id");

                    b.HasIndex("IdAerolinea");

                    b.ToTable("HorariosAerolineas");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.HorarioOperacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("HoraFin")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("HoraInicio")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("HorariosOperaciones");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.LoginUsuario", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(150);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(150);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("LoginsUsuario");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.NovedadProceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<DateTime>("FechaHora");

                    b.Property<int>("IdCausal");

                    b.Property<int>("IdOperacionVuelo");

                    b.Property<int>("IdRegistro");

                    b.Property<int>("TipoNovedad");

                    b.HasKey("Id");

                    b.HasIndex("IdCausal");

                    b.HasIndex("IdOperacionVuelo");

                    b.ToTable("NovedadesProcesos");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.OperacionesVuelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CargueId");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("EX");

                    b.Property<int>("EstadoProceso");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaLlegada");

                    b.Property<DateTime>("FechaVuelo");

                    b.Property<string>("HoraLlegada")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("HoraVuelo")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("INF");

                    b.Property<int>("IdAerolinea");

                    b.Property<string>("MatriculaVuelo")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("NumeroVuelo")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("NumeroVueloLlegada")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<string>("OrigenDes")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<int>("PAX");

                    b.Property<int>("PagoCOP");

                    b.Property<int>("PagoUSD");

                    b.Property<int>("TRIP");

                    b.Property<int>("TTC");

                    b.Property<int>("TTL");

                    b.Property<string>("TipoVuelo")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("TotalEmbarcados");

                    b.Property<int?>("TotalEmbarcadosAdd");

                    b.Property<int?>("TotalEmbarcados_LIQ");

                    b.HasKey("Id");

                    b.HasIndex("CargueId");

                    b.HasIndex("EstadoProceso");

                    b.HasIndex("IdAerolinea");

                    b.ToTable("OperacionesVuelos");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.OperacionesVueloErrores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Error")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("Fecha");

                    b.Property<int>("IdVuelo");

                    b.Property<string>("TipoError")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<int>("TipoValidacion");

                    b.Property<int>("TipoValidacion2");

                    b.Property<string>("Valores")
                        .HasMaxLength(100);

                    b.Property<int>("ValoresNuevos")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("IdVuelo");

                    b.ToTable("OperacionesVueloErrores");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.OperacionesVueloSeguimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<int>("IdOperacionVuelo");

                    b.Property<string>("IdUsuario")
                        .IsRequired();

                    b.Property<string>("Observacion")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("Estado");

                    b.HasIndex("IdOperacionVuelo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("OperacionVueloSeguimiento");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Pais", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2);

                    b.Property<bool>("IdEstado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Pasajero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaVuelo");

                    b.Property<int>("IdCargue");

                    b.Property<string>("IdCategoriaPasajero")
                        .IsRequired();

                    b.Property<int>("IdOperacionVuelo");

                    b.Property<string>("MatriculaVuelo")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Motivo_exencion")
                        .HasMaxLength(45);

                    b.Property<string>("NombrePasajero")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("NumeroVuelo")
                        .IsRequired();

                    b.Property<string>("Realiza_viaje")
                        .HasMaxLength(45);

                    b.HasKey("Id");

                    b.HasIndex("IdOperacionVuelo");

                    b.ToTable("Pasajeros");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.PasajeroTransito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AerolineaLlegada")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("AerolineaSalida")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Categoria")
                        .IsRequired();

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<DateTime>("FechaHoraCargue");

                    b.Property<DateTime>("FechaHoraFirma");

                    b.Property<DateTime>("FechaLlegada");

                    b.Property<DateTime>("FechaSalida");

                    b.Property<int>("Firmado");

                    b.Property<string>("HoraLlegada")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("HoraSalida")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("IdCargue");

                    b.Property<int>("IdOperacionVuelo");

                    b.Property<int>("IdVueloLlegada");

                    b.Property<int>("IdVueloSalida");

                    b.Property<string>("NombrePasajero")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("NumeroVueloLlegada")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("NumeroVueloSalida")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Observaciones")
                        .HasMaxLength(100);

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<bool>("TasaCobrada");

                    b.HasKey("Id");

                    b.HasIndex("IdOperacionVuelo");

                    b.ToTable("PasajerosTransito");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.PoliticasDeTratamientoDeDatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AceptarPoliticas")
                        .HasColumnType("BIT");

                    b.Property<string>("Aerolinea")
                        .HasMaxLength(150);

                    b.Property<string>("Cargo")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Hora")
                        .HasMaxLength(5);

                    b.Property<string>("NombreUsuario")
                        .HasMaxLength(150);

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(20);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(45);

                    b.HasKey("Id");

                    b.ToTable("PoliticasDeTratamientoDeDatos");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.RespuestaTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adjunto");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<int>("IdTicket");

                    b.Property<string>("IdUsuario")
                        .IsRequired();

                    b.Property<string>("Mensaje")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("IdTicket");

                    b.HasIndex("IdUsuario");

                    b.ToTable("RespuestasTickets");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Rol", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.RolesUsuarios", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(150);

                    b.Property<string>("RoleId")
                        .HasMaxLength(150);

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolesUsuarios");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.RutaArchivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaActualizacion");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<int>("IdOperacionVuelo");

                    b.Property<string>("IdUsuario")
                        .IsRequired();

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int?>("OperacionesVuelosId");

                    b.Property<string>("TipoArchivo")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("OperacionesVuelosId");

                    b.ToTable("RutaArchivos");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.TasaAeroportuaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha");

                    b.Property<decimal>("ValorCOP");

                    b.Property<decimal>("ValorUSD");

                    b.HasKey("Id");

                    b.ToTable("TasasAeroportuarias");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adjunto");

                    b.Property<string>("Asunto")
                        .IsRequired();

                    b.Property<int>("Estado");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaVuelo");

                    b.Property<int>("IdAerolinea");

                    b.Property<string>("IdUsuario")
                        .IsRequired();

                    b.Property<string>("Mensaje")
                        .IsRequired();

                    b.Property<string>("NumeroTicket")
                        .IsRequired();

                    b.Property<int>("Seguimiento");

                    b.Property<int>("TipoConsulta");

                    b.HasKey("Id");

                    b.HasIndex("Estado");

                    b.HasIndex("IdAerolinea");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("TipoConsulta");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.TokenUsuario", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(150);

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("TokensUsuario");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Tripulantes", b =>
                {
                    b.Property<int>("IdTripulantes")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FuncionTripulante")
                        .HasMaxLength(45);

                    b.Property<string>("LicenciaTripulante")
                        .HasMaxLength(45);

                    b.Property<string>("NombreTripulante")
                        .HasMaxLength(150);

                    b.Property<int>("codigoAreolinea");

                    b.HasKey("IdTripulantes");

                    b.HasIndex("codigoAreolinea");

                    b.ToTable("Tripulantes");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.U_Catalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255);

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255);

                    b.Property<string>("Usuario")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("U_Catalogo");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.U_Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255);

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<int>("IdCatalogo");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255);

                    b.Property<string>("Usuario")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdCatalogo");

                    b.ToTable("U_Item");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150);

                    b.Property<int>("AccessFailedCount");

                    b.Property<int>("Activo");

                    b.Property<string>("Apellido");

                    b.Property<string>("Cargo");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<int>("EmailConfirmed")
                        .HasColumnType("int");

                    b.Property<int>("LockoutEnabled")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Nombre");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("NumeroDocumento");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("PhoneNumberConfirmed")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("Telefono");

                    b.Property<string>("TipoDocumento");

                    b.Property<int>("TwoFactorEnabled")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.UsuariosAerolineas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAerolinea");

                    b.Property<string>("IdUsuario");

                    b.HasKey("Id");

                    b.HasIndex("IdAerolinea");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuariosAerolineas");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.ValidacionManual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantEX_New")
                        .HasMaxLength(3);

                    b.Property<int>("CantEX_Old")
                        .HasMaxLength(3);

                    b.Property<int>("CantInfantes_New")
                        .HasMaxLength(3);

                    b.Property<int>("CantInfantes_Old")
                        .HasMaxLength(3);

                    b.Property<int>("CantPagoCOP_New")
                        .HasMaxLength(3);

                    b.Property<int>("CantPagoCOP_Old")
                        .HasMaxLength(3);

                    b.Property<int>("CantPagoUSD_New")
                        .HasMaxLength(3);

                    b.Property<int>("CantPagoUSD_Old")
                        .HasMaxLength(3);

                    b.Property<int>("CantPasajeros_New")
                        .HasMaxLength(3);

                    b.Property<int>("CantPasajeros_Old")
                        .HasMaxLength(3);

                    b.Property<int>("CantTRIP_New")
                        .HasMaxLength(3);

                    b.Property<int>("CantTRIP_Old")
                        .HasMaxLength(3);

                    b.Property<int>("CantTTC_New")
                        .HasMaxLength(3);

                    b.Property<int>("CantTTC_Old")
                        .HasMaxLength(3);

                    b.Property<int>("CantTTL_New")
                        .HasMaxLength(3);

                    b.Property<int>("CantTTL_Old")
                        .HasMaxLength(3);

                    b.Property<int>("CantTransitos_New")
                        .HasMaxLength(3);

                    b.Property<int>("CantTransitos_Old")
                        .HasMaxLength(3);

                    b.Property<int>("CausalEX")
                        .HasMaxLength(3);

                    b.Property<string>("CausalInfantes")
                        .HasMaxLength(3);

                    b.Property<string>("CausalPagoCOP")
                        .HasMaxLength(3);

                    b.Property<string>("CausalPagoUSD")
                        .HasMaxLength(3);

                    b.Property<string>("CausalPasajeros")
                        .HasMaxLength(3);

                    b.Property<string>("CausalTRIP")
                        .HasMaxLength(3);

                    b.Property<string>("CausalTTC")
                        .HasMaxLength(3);

                    b.Property<string>("CausalTTL")
                        .HasMaxLength(3);

                    b.Property<string>("CausalTransitos")
                        .HasMaxLength(3);

                    b.Property<int>("IdVuelo")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("ValidacionesManuales");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Vuelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAerolinea");

                    b.Property<string>("IdDestino")
                        .IsRequired();

                    b.Property<int>("IdEstado");

                    b.Property<string>("IdOrigen")
                        .IsRequired();

                    b.Property<int>("IdVuelo");

                    b.Property<string>("NumeroVuelo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("TipoVuelo")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("IdAerolinea");

                    b.HasIndex("IdDestino");

                    b.HasIndex("IdOrigen");

                    b.ToTable("Vuelos");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Causal", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.U_Item", "U_Item2")
                        .WithMany()
                        .HasForeignKey("Estado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.U_Item", "U_Item")
                        .WithMany()
                        .HasForeignKey("Tipo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Ciudad", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Pais", "Pais")
                        .WithMany("Ciudades")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.ClaimRol", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Rol", "Rol")
                        .WithMany("ClaimRol")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.ClaimUsuario", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("ClaimUsuario")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.HorarioAerolinea", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Aerolinea", "Aerolinea")
                        .WithMany("HorarioAerolinea")
                        .HasForeignKey("IdAerolinea")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.LoginUsuario", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("LoginUsuario")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.NovedadProceso", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Causal", "Causal")
                        .WithMany("NovedadesProceso")
                        .HasForeignKey("IdCausal")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.OperacionesVuelo", "OperacionesVuelo")
                        .WithMany("NovedadesProceso")
                        .HasForeignKey("IdOperacionVuelo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.OperacionesVuelo", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Cargue")
                        .WithMany("OperacionesVuelos")
                        .HasForeignKey("CargueId");

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.U_Item", "U_Item")
                        .WithMany()
                        .HasForeignKey("EstadoProceso")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Aerolinea", "Aerolinea")
                        .WithMany("OperacionesVuelos")
                        .HasForeignKey("IdAerolinea")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.OperacionesVueloErrores", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.OperacionesVuelo", "OperacionesVuelo")
                        .WithMany()
                        .HasForeignKey("IdVuelo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.OperacionesVueloSeguimiento", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.U_Item", "U_Item")
                        .WithMany()
                        .HasForeignKey("Estado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.OperacionesVuelo", "OperacionesVuelo")
                        .WithMany()
                        .HasForeignKey("IdOperacionVuelo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Pasajero", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.OperacionesVuelo", "OperacionesVuelo")
                        .WithMany("Pasajeros")
                        .HasForeignKey("IdOperacionVuelo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.PasajeroTransito", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.OperacionesVuelo", "OperacionesVuelo")
                        .WithMany("PasajerosTransitos")
                        .HasForeignKey("IdOperacionVuelo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.RespuestaTicket", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Ticket", "Ticket")
                        .WithMany("RespuestasTickets")
                        .HasForeignKey("IdTicket")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("RespuestasTickets")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.RolesUsuarios", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Rol", "Rol")
                        .WithMany("RolesUsuarios")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("RolesUsuarios")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.RutaArchivos", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.OperacionesVuelo", "OperacionesVuelos")
                        .WithMany("Archivos")
                        .HasForeignKey("OperacionesVuelosId");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Ticket", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.U_Item", "U_Item2")
                        .WithMany()
                        .HasForeignKey("Estado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Aerolinea", "Aerolinea")
                        .WithMany("Tickets")
                        .HasForeignKey("IdAerolinea")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("Tickets")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.U_Item", "U_Item")
                        .WithMany()
                        .HasForeignKey("TipoConsulta")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.TokenUsuario", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("TokenUsuario")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Tripulantes", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Aerolinea", "Aerolinea")
                        .WithMany()
                        .HasForeignKey("codigoAreolinea")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.U_Item", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.U_Catalogo", "U_Catalogo")
                        .WithMany()
                        .HasForeignKey("IdCatalogo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.UsuariosAerolineas", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Aerolinea", "Aerolinea")
                        .WithMany("UsuariosAerolineas")
                        .HasForeignKey("IdAerolinea")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("UsuariosAerolineas")
                        .HasForeignKey("IdUsuario");
                });

            modelBuilder.Entity("Opain.Jarvis.Dominio.Entidades.Vuelo", b =>
                {
                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Aerolinea", "Aerolinea")
                        .WithMany("Vuelos")
                        .HasForeignKey("IdAerolinea")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Ciudad", "Destino")
                        .WithMany("Destinos")
                        .HasForeignKey("IdDestino")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Opain.Jarvis.Dominio.Entidades.Ciudad", "Origen")
                        .WithMany("Origenes")
                        .HasForeignKey("IdOrigen")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
